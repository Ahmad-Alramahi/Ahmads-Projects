integer-NW|C
#21->#|C
#<Co#|C
Could-WORD|C
backward-WORD|C
Could-PW|C
#2>#|C
true-WORD|C
#-121>#|C
#<Th#|C
.-NW|C
#<x#|C
Example-3-W-NW|C
backward-as-W-NW|C
#<Inpu#|C
#mes>#|C
integer-is-W-NW|C
2-31-W-NW|C
#false>#|C
121--NW|C
#rom>#|C
-101-DISJN|C
-101-Output-W-NW|C
up-NW|C
#<b#|C
Constraints-</code>-W-PW|C
31-DISJN|C
#<-101>#|C
you-NW|C
x-WORD|C
31-<-W-NW|C
#<Cou#|C
#ve>#|C
#ng>#|C
2-:-W-NW|C
#<true>#|C
121-PW|C
return-WORD|C
forward-NW|C
#<-#|C
#<solv#|C
as-WORD|C
solve-DISJN|C
#you>#|C
=-<-W-PW|C
x-NW|C
x-<code>-W-PW|C
<code>-return-W-PW|C
Explanation-DISJP|C
#<no#|C
to-WORD|C
becomes-DISJP|C
up-WORD|C
#<In#|C
:-true-W-NW|C
#<an>#|C
integer-WORD|C
#m>#|C
Therefore-DISJN|C
same-PW|C
1-Example-W-PW|C
.-An-W-NW|C
#<conve#|C
Follow-NW|C
#<fa#|C
it-when-W-PW|C
.-DISJP|C
#he>#|C
#<Give#|C
#<For#|C
An-NW|C
a-NW|C
Given-PW|C
2-=-W-PW|C
121--WORD|C
converting-PW|C
#<sa#|C
123-DISJN|C
#<not>#|C
to-left-W-PW|C
#<back#|C
x-PW|C
#<C#|C
</code>-true-W-PW|C
#code>>#|C
#reads>#|C
121-<code>-W-PW|C
#urn>#|C
31-DISJP|C
?-DISJN|C
-101-DISJP|C
#Could>#|C
#or>#|C
#<12#|C
while-palindrome-W-PW|C
#<121-#|C
#3>#|C
not-WORD|C
#alse>#|C
#Input>#|C
<-NW|C
palindrome-WORD|C
1-DISJP|C
solve-you-W-PW|C
#<fals#|C
31-NW|C
Could-you-W-NW|C
palindrome-while-W-NW|C
false-Explanation-W-NW|C
you-Could-W-PW|C
</code>-1-W-PW|C
<code>-:-W-PW|C
#nput>#|C
it-NW|C
#e>>#|C
.-PW|C
return-<code>-W-NW|C
=-NW|C
is-NW|C
,-it-W-NW|C
1-</code>-W-NW|C
Example-NW|C
An-WORD|C
Output-WORD|C
,-right-W-PW|C
.-121--W-PW|C
#left>#|C
becomes-DISJN|C
you-DISJP|C
Input-<code>-W-PW|C
.-forward-W-PW|C
#<lef#|C
121-NW|C
Therefore-DISJP|C
forward-PW|C
#ou>#|C
Given-DISJP|C
4-DISJP|C
#<Exam#|C
#<reads#|C
the-reads-W-PW|C
#ode>>#|C
#put>#|C
#<forwa#|C
#<Examp#|C
31--2-W-PW|C
#<?#|C
#01>#|C
if-PW|C
#ward>#|C
:-Reads-W-NW|C
#<wi#|C
#<:>#|C
From-:-W-PW|C
#ample>#|C
#<Cons#|C
#hile>#|C
#n>#|C
#lve>#|C
converting-the-W-NW|C
#<palin#|C
a-not-W-PW|C
#rting>#|C
Constraints-PW|C
1-DISJN|C
01-WORD|C
converting-NW|C
#<forw#|C
Therefore-.-W-PW|C
Could-NW|C
#<stri#|C
while-WORD|C
Given-WORD|C
#ft>#|C
converting-DISJN|C
#<in#|C
solve-NW|C
a-PW|C
#<tru#|C
converting-WORD|C
x-=-W-NW|C
#<</co#|C
#kward>#|C
Reads-WORD|C
<-DISJN|C
without-converting-W-NW|C
palindrome-is-W-PW|C
reads-PW|C
:-DISJP|C
false-PW|C
to-left-W-NW|C
you-DISJN|C
--WORD|C
=-WORD|C
Therefore-PW|C
Input-PW|C
up-PW|C
Reads-:-W-PW|C
while-DISJN|C
Constraints-NW|C
#<<cod#|C
becomes-121--W-NW|C
31-PW|C
left-From-W-PW|C
#101>#|C
it-Therefore-W-PW|C
Follow-up-W-NW|C
#x>#|C
-2-NW|C
#1>#|C
Example-WORD|C
#ot>#|C
-121-Output-W-NW|C
right-NW|C
#<<c#|C
#<retur#|C
#<Fo#|C
#<Con#|C
#121>#|C
=-PW|C
#o>#|C
from-01-W-PW|C
?-string-W-PW|C
#<same>#|C
false-NW|C
#as>#|C
Output--101-W-PW|C
.-WORD|C
Input-NW|C
-2-31-W-NW|C
#<Reads#|C
same-the-W-PW|C
#<examp#|C
An-PW|C
example-PW|C
Example-.-W-PW|C
reads-NW|C
false-DISJP|C
121--PW|C
#21>#|C
false-WORD|C
#<up#|C
solve-DISJP|C
return-NW|C
#ore>#|C
3-WORD|C
#0>#|C
without-it-W-PW|C
121-DISJP|C
example-,-W-NW|C
.-Example-W-NW|C
-121-DISJP|C
#<A#|C
Explanation-DISJN|C
#drome>#|C
#ht>#|C
#<From#|C
when-NW|C
it-PW|C
#<Exa#|C
#ting>#|C
<-=-W-NW|C
#ion>#|C
#<Ex#|C
while-DISJP|C
From-WORD|C
integer-an-W-PW|C
:-Could-W-NW|C
#1->#|C
string-?-W-NW|C
it-reads-W-NW|C
#rue>#|C
#aints>#|C
Reads-DISJP|C
#nts>#|C
Input-DISJP|C
left-to-W-NW|C
Example-DISJN|C
#when>#|C
For-.-W-PW|C
Example-1-W-NW|C
</code>-Constraints-W-NW|C
=-10-W-NW|C
121-=-W-PW|C
#<fro#|C
Output-:-W-NW|C
palindrome-when-W-NW|C
#<ret#|C
if-DISJN|C
#<2#|C
-121-NW|C
Could-:-W-PW|C
when-PW|C
121--becomes-W-PW|C
</code>-NW|C
=-DISJN|C
#solve>#|C
#olve>#|C
string-DISJN|C
-101-PW|C
<code>-true-W-NW|C
<code>--2-W-NW|C
#<yo#|C
Explanation-NW|C
3-DISJP|C
#rward>#|C
#<le#|C
#-101>#|C
reads-DISJN|C
false-DISJN|C
integer-DISJN|C
as-PW|C
<code>-WORD|C
same-backward-W-NW|C
a-palindrome-W-NW|C
121--.-W-NW|C
without-NW|C
#from>#|C
Could-DISJN|C
#<strin#|C
#<Rea#|C
#<Expla#|C
#<-2#|C
,-NW|C
#<=#|C
121-DISJN|C
palindrome-DISJP|C
-2-<code>-W-PW|C
#<co#|C
An-DISJN|C
an-integer-W-NW|C
#<31#|C
is-WORD|C
#<pa#|C
integer-An-W-PW|C
Reads-PW|C
becomes-WORD|C
Input-DISJN|C
Reads-NW|C
#tion>#|C
when-DISJN|C
#<</cod#|C
while-NW|C
Explanation-PW|C
example-NW|C
#ould>#|C
Reads-DISJN|C
#<01>#|C
return-PW|C
#<t#|C
#<whe#|C
.-For-W-NW|C
Therefore-WORD|C
if-NW|C
#<Outp#|C
-DISJP|C
#<i#|C
#<Given#|C
#eturn>#|C
is-DISJN|C
</code>-Example-W-NW|C
to-NW|C
right-From-W-PW|C
#utput>#|C
:-<code>-W-NW|C
left-.-W-NW|C
:-4-W-PW|C
=-121-W-NW|C
when-palindrome-W-PW|C
reads-DISJP|C
#ue>#|C
up-Follow-W-PW|C
</code>-.-W-PW|C
true-NW|C
Explanation-:-W-NW|C
#For>#|C
-2-PW|C
converting-DISJP|C
solve-WORD|C
Could-DISJP|C
#<tr#|C
:-DISJN|C
01-Reads-W-PW|C
#23>#|C
#<fal#|C
#121->#|C
#teger>#|C
#<re#|C
#<4#|C
<-x-W-PW|C
:-up-W-PW|C
<code>-DISJN|C
the-WORD|C
#<when#|C
,-return-W-NW|C
#ow>#|C
when-DISJP|C
#<p#|C
31-WORD|C
#ut>#|C
From-DISJP|C
#<whi#|C
.-DISJN|C
#omes>#|C
.-integer-W-PW|C
Constraints-DISJN|C
is-PW|C
-2-DISJP|C
=-2-W-NW|C
,-DISJP|C
#<Read#|C
</code>-is-W-NW|C
#<e#|C
#4>#|C
#to>#|C
#ints>#|C
</code>-DISJN|C
,-<code>-W-NW|C
is-DISJP|C
1---W-PW|C
it-,-W-PW|C
Output-DISJN|C
#<backw#|C
#iven>#|C
:-2-W-PW|C
#<-121#|C
integer-PW|C
up-DISJN|C
:-Input-W-PW|C
#<3>#|C
up-:-W-NW|C
as-forward-W-NW|C
#<Fol#|C
#rd>#|C
#<Coul#|C
#From>#|C
1-WORD|C
an-WORD|C
#<with#|C
#<0#|C
-101-NW|C
#ring>#|C
</code>-PW|C
#<not#|C
return-,-W-PW|C
<-PW|C
a-is-W-PW|C
123-<code>-W-PW|C
#<wit#|C
#<pal#|C
from-right-W-NW|C
without-PW|C
string-a-W-PW|C
-2-WORD|C
--31-W-PW|C
Example-DISJP|C
=--121-W-NW|C
-2-DISJN|C
Example-PW|C
?--W-NW|C
#<ex#|C
From-DISJN|C
#<bac#|C
when-it-W-NW|C
</code>-DISJP|C
Output-10-W-PW|C
#<st#|C
###|C
#llow>#|C
#<F#|C
=-DISJP|C
2-PW|C
#<integ#|C
string-DISJP|C
#<is#|C
#<-101#|C
#efore>#|C
#<left#|C
#rome>#|C
#<fo#|C
#<Input#|C
#<r#|C
#<the#|C
up-DISJP|C
Output-PW|C
.-From-W-NW|C
#<4>#|C
converting-without-W-PW|C
integer-DISJP|C
#ard>#|C
</code>-121-W-PW|C
#<For>#|C
becomes-it-W-PW|C
palindrome-DISJN|C
3-Example-W-PW|C
An-DISJP|C
:-Output-W-PW|C
right-to-W-NW|C
#re>#|C
#<-2>#|C
same-WORD|C
#10>#|C
3-DISJN|C
to-PW|C
#<121#|C
For-WORD|C
#<str#|C
,-</code>-W-PW|C
#<retu#|C
is-a-W-NW|C
Constraints-:-W-NW|C
integer-.-W-NW|C
it-becomes-W-NW|C
#ds>#|C
#<Re#|C
Follow-</code>-W-PW|C
#<Const#|C
#<from>#|C
</code>-false-W-PW|C
#de>>#|C
to-right-W-NW|C
#ven>#|C
the-NW|C
x-<-W-NW|C
example-For-W-PW|C
.-</code>-W-NW|C
#<1>#|C
right-to-W-PW|C
#<Inp#|C
#e>#|C
string-NW|C
same-DISJN|C
#<read#|C
#<</#|C
2-DISJN|C
:-3-W-PW|C
Constraints-WORD|C
#<if#|C
the-integer-W-NW|C
it-is-W-NW|C
#<n#|C
121-</code>-W-NW|C
to-DISJN|C
true-DISJN|C
#<c#|C
:-Explanation-W-PW|C
#<From>#|C
#<true#|C
#<Ou#|C
to-integer-W-PW|C
true-</code>-W-NW|C
#ld>#|C
#<ri#|C
is-it-W-PW|C
:-x-W-NW|C
forward-DISJN|C
integer-palindrome-W-PW|C
Reads-01-W-NW|C
it-DISJN|C
2-Example-W-PW|C
#s>#|C
left-WORD|C
#<Gi#|C
2-NW|C
#<it>#|C
#<<co#|C
#<-10#|C
#<The#|C
#eger>#|C
#<Fr#|C
<-31-W-PW|C
Output-NW|C
#fore>#|C
true-<code>-W-PW|C
#<when>#|C
left-PW|C
4-Example-W-PW|C
#<sol#|C
#d>#|C
,-DISJN|C
Constraints-DISJP|C
#<pali#|C
4-WORD|C
#<if>#|C
,-left-W-PW|C
same-DISJP|C
#<01#|C
#<.#|C
#<same#|C
a-to-W-PW|C
</code>-WORD|C
#comes>#|C
10-DISJN|C
Explanation-WORD|C
,-WORD|C
#tring>#|C
#<y#|C
123-</code>-W-NW|C
<-WORD|C
Output-DISJP|C
#uld>#|C
an-PW|C
backward-PW|C
#<2>#|C
.-left-W-PW|C
#ing>#|C
#Given>#|C
#ads>#|C
#<123#|C
#r>#|C
?-WORD|C
#<Giv#|C
is-not-W-NW|C
10-Output-W-NW|C
1-NW|C
#<is>#|C
<code>-while-W-PW|C
true-DISJP|C
#<exam#|C
:-PW|C
<code>-integer-W-PW|C
#<O#|C
to-DISJP|C
string-PW|C
#<?>#|C
false-:-W-PW|C
an-DISJP|C
an-Given-W-PW|C
#<for#|C
An-.-W-PW|C
3-:-W-NW|C
forward-DISJP|C
#<Expl#|C
:-false-W-NW|C
if-<code>-W-NW|C
121-WORD|C
Given-an-W-NW|C
#<to#|C
From-.-W-PW|C
#<There#|C
true-PW|C
#<Follo#|C
:-NW|C
Example-4-W-NW|C
palindrome-NW|C
10-NW|C
#tput>#|C
10-DISJP|C
=--101-W-NW|C
-DISJN|C
x-DISJP|C
#<u#|C
it-WORD|C
#ight>#|C
integer-<code>-W-NW|C
,-PW|C
#<int#|C
123-NW|C
#123>#|C
.--121-W-PW|C
#<Out#|C
left-,-W-NW|C
without-DISJP|C
from-DISJN|C
3-PW|C
</code>-x-W-PW|C
#ts>#|C
#<bec#|C
#<31>#|C
left-to-W-PW|C
#<you>#|C
the-converting-W-PW|C
#ation>#|C
</code>-123-W-PW|C
is-palindrome-W-NW|C
an-DISJN|C
-101-WORD|C
-121-PW|C
#om>#|C
not-PW|C
#hen>#|C
#<you#|C
<code>-DISJP|C
123-WORD|C
a-DISJN|C
#right>#|C
not-a-W-NW|C
#low>#|C
#<beco#|C
#se>#|C
#turn>#|C
#<to>#|C
#<Outpu#|C
3-NW|C
#<l#|C
#<a#|C
#<so#|C
as-NW|C
Example-</code>-W-PW|C
#-2>#|C
1-PW|C
as-backward-W-PW|C
Input-WORD|C
Output-121-W-PW|C
:-Constraints-W-PW|C
not-DISJP|C
From-right-W-NW|C
reads-the-W-NW|C
#:>#|C
palindrome-.-W-NW|C
without-WORD|C
<code>-123-W-NW|C
if-DISJP|C
#eft>#|C
x-DISJN|C
#out>#|C
#ome>#|C
#f>#|C
?-NW|C
#<-1#|C
#up>#|C
from-DISJP|C
#mple>#|C
as-DISJN|C
without-DISJN|C
while-PW|C
#g>#|C
#An>#|C
reads--121-W-NW|C
left-NW|C
#p>#|C
#<left>#|C
not-DISJN|C
palindrome-PW|C
right-DISJP|C
#<be#|C
#<x>#|C
an-NW|C
#<an#|C
the-PW|C
#<,#|C
#<w#|C
solve-it-W-NW|C
#<</c#|C
#<false#|C
#<wh#|C
For-NW|C
#le>#|C
#<121->#|C
backward-NW|C
a-DISJP|C
#me>#|C
#w>#|C
</code>-if-W-NW|C
For-DISJN|C
#<righ#|C
false-</code>-W-NW|C
#an>#|C
#=>#|C
#<10>#|C
#it>#|C
#while>#|C
</code>-Follow-W-NW|C
x-=-W-PW|C
#ollow>#|C
#<fr#|C
from-PW|C
Therefore-NW|C
#lse>#|C
#<123>#|C
#<R#|C
integer-the-W-PW|C
#ght>#|C
<code>-if-W-PW|C
#en>#|C
return-DISJP|C
--PW|C
#<<>#|C
if-</code>-W-PW|C
#if>#|C
integer-to-W-NW|C
--DISJN|C
#<-121>#|C
x-</code>-W-NW|C
#ger>#|C
#<ba#|C
right-DISJN|C
palindrome-a-W-PW|C
#same>#|C
#true>#|C
-121-.-W-NW|C
.-Therefore-W-NW|C
the-DISJP|C
#a>#|C
forward-as-W-PW|C
#<s#|C
,-example-W-PW|C
not-is-W-PW|C
not-.-W-NW|C
121--DISJP|C
as-DISJP|C
example-WORD|C
-121-DISJN|C
01-NW|C
#<Could#|C
#<.>#|C
-121-=-W-PW|C
backward-same-W-PW|C
#<conv#|C
#<>#|C
you-WORD|C
4-DISJN|C
For-DISJP|C
<code>-NW|C
#<solve#|C
.-not-W-PW|C
#<3#|C
becomes-NW|C
#<I#|C
#<from#|C
is-integer-W-PW|C
Input-:-W-NW|C
when-WORD|C
<code>-x-W-NW|C
from-WORD|C
#<,>#|C
#<the>#|C
From-left-W-NW|C
solve-PW|C
backward-DISJP|C
#is>#|C
2-WORD|C
a-string-W-NW|C
right-,-W-NW|C
not-NW|C
#<th#|C
01-PW|C
:-WORD|C
For-PW|C
:-1-W-PW|C
From-PW|C
left-DISJP|C
#thout>#|C
#.>#|C
01-DISJN|C
string-WORD|C
Explanation-false-W-PW|C
#<Ther#|C
4-PW|C
-121-WORD|C
#on>#|C
31-2-W-PW|C
#<T#|C
-NW|C
the-DISJN|C
#ile>#|C
10-PW|C
right-PW|C
<-DISJP|C
is-</code>-W-PW|C
x-:-W-PW|C
01-from-W-NW|C
from-NW|C
121-Output-W-NW|C
.-palindrome-W-PW|C
123-PW|C
#<->#|C
the-same-W-NW|C
#<right#|C
#eads>#|C
a-WORD|C
true-:-W-PW|C
10-=-W-PW|C
#<:#|C
#<Exp#|C
while-<code>-W-NW|C
Therefore-it-W-NW|C
palindrome-integer-W-NW|C
#<rea#|C
#<121>#|C
#<witho#|C
#<E#|C
--NW|C
#u>#|C
right-WORD|C
Example-2-W-NW|C
#<it#|C
#<as>#|C
123-DISJP|C
#<Fro#|C
#<inte#|C
#<up>#|C
<code>-,-W-PW|C
1-:-W-NW|C
#<as#|C
Output--121-W-PW|C
backward-DISJN|C
#<whil#|C
it-without-W-NW|C
#->#|C
left-DISJN|C
example-DISJN|C
#<f#|C
01-DISJP|C
to-right-W-PW|C
#the>#|C
Follow-WORD|C
#<con#|C
#<becom#|C
Given--W-PW|C
#?>#|C
</code>-,-W-NW|C
=-x-W-PW|C
#<rig#|C
4-:-W-NW|C
Follow-DISJN|C
31---W-NW|C
#<exa#|C
#es>#|C
reads-it-W-PW|C
#hout>#|C
reads-WORD|C
2-DISJP|C
10-WORD|C
#er>#|C
forward-WORD|C
4-NW|C
<code>-Input-W-NW|C
you-solve-W-NW|C
From-NW|C
it-solve-W-PW|C
#<sam#|C
-PW|C
-121-reads-W-PW|C
#<<code#|C
<code>-121-W-NW|C
=-x-W-NW|C
if-WORD|C
#31>#|C
forward-.-W-NW|C
return-DISJN|C
example-DISJP|C
#<<#|C
<code>-PW|C
#<=>#|C
#<An#|C
#<while#|C
#<-12#|C
An-integer-W-NW|C
Follow-PW|C
-101-=-W-PW|C
becomes-PW|C
#<1#|C
--DISJP|C
#ame>#|C
--1-W-NW|C
#,>#|C
same-NW|C
#<G#|C
to-a-W-NW|C
#not>#|C
#<a>#|C
#t>#|C
#rn>#|C
#<An>#|C
#>>#|C
#ple>#|C
:-From-W-NW|C
#<Foll#|C
121--DISJN|C
Follow-DISJP|C
you-PW|C
#<10#|C
right-from-W-PW|C
#Reads>#|C
it-DISJP|C
For-example-W-NW|C
<cod-PREVIOUS-PREFIX|CpC
to-left-PSEQW2|CpC
x-PREVIOUS-SUFFIX|CpC
rom-CURRENT-SUFFIX|CpC
you-PSEQpW|CpC
Given-an-PSEQW2|CpC
10-PSEQW|CpC
</code>-is-PSEQW2|CpC
4-CURRENT-SUFFIX|CpC
fa-CURRENT-PREFIX|CpC
Exp-PREVIOUS-PREFIX|CpC
-121-PSEQW|CpC
st-PREVIOUS-PREFIX|CpC
ckward-PREVIOUS-SUFFIX|CpC
left-PSEQW|CpC
lve-CURRENT-SUFFIX|CpC
solve-PSEQW|CpC
withou-PREVIOUS-PREFIX|CpC
.-Therefore-PSEQW2|CpC
121-PSEQpW|CpC
1-CURRENT-PREFIX|CpC
righ-PREVIOUS-PREFIX|CpC
m-CURRENT-SUFFIX|CpC
3-PSEQpW|CpC
</-PREVIOUS-PREFIX|CpC
stri-CURRENT-PREFIX|CpC
,-PSEQpW|CpC
xample-PREVIOUS-SUFFIX|CpC
when-PREVIOUS-SUFFIX|CpC
=-121-PSEQW2|CpC
=-x-PSEQW2|CpC
return-PREVIOUS-PREFIX|CpC
,-return-PSEQW2|CpC
x-PSEQW|CpC
s-PREVIOUS-PREFIX|CpC
integer-PSEQW|CpC
Fro-CURRENT-PREFIX|CpC
121--.-PSEQW2|CpC
1-PREVIOUS-SUFFIX|CpC
1-PSEQW|CpC
out-CURRENT-SUFFIX|CpC
left-to-PSEQW2|CpC
<-PSEQW|CpC
rig-PREVIOUS-PREFIX|CpC
right-PREVIOUS-SUFFIX|CpC
-2-CURRENT-PREFIX|CpC
if-CURRENT-SUFFIX|CpC
From-PSEQpW|CpC
it-PSEQpW|CpC
--PREVIOUS-PREFIX|CpC
10-PREVIOUS-SUFFIX|CpC
inte-CURRENT-PREFIX|CpC
ple-PREVIOUS-SUFFIX|CpC
:-PREVIOUS-SUFFIX|CpC
Output-PSEQpW|CpC
tion-PREVIOUS-SUFFIX|CpC
aints-CURRENT-SUFFIX|CpC
101-CURRENT-SUFFIX|CpC
fal-CURRENT-PREFIX|CpC
01-PSEQW|CpC
true-PREVIOUS-SUFFIX|CpC
For-PREVIOUS-SUFFIX|CpC
is-CURRENT-SUFFIX|CpC
exam-PREVIOUS-PREFIX|CpC
reads-PREVIOUS-SUFFIX|CpC
whi-CURRENT-PREFIX|CpC
:-CURRENT-SUFFIX|CpC
he-CURRENT-SUFFIX|CpC
mple-PREVIOUS-SUFFIX|CpC
121--CURRENT-PREFIX|CpC
forwar-PREVIOUS-PREFIX|CpC
ithout-CURRENT-SUFFIX|CpC
ld-PREVIOUS-SUFFIX|CpC
as-CURRENT-SUFFIX|CpC
10-Output-PSEQW2|CpC
ample-PREVIOUS-SUFFIX|CpC
,-PREVIOUS-PREFIX|CpC
Cons-CURRENT-PREFIX|CpC
An-integer-PSEQW2|CpC
.-CURRENT-SUFFIX|CpC
Constraints-:-PSEQW2|CpC
:-false-PSEQW2|CpC
Follo-PREVIOUS-PREFIX|CpC
s-CURRENT-SUFFIX|CpC
to-PREVIOUS-PREFIX|CpC
Inp-CURRENT-PREFIX|CpC
b-PREVIOUS-PREFIX|CpC
2-PREVIOUS-SUFFIX|CpC
01-PREVIOUS-PREFIX|CpC
it-is-PSEQW2|CpC
conve-CURRENT-PREFIX|CpC
retur-PREVIOUS-PREFIX|CpC
ard-CURRENT-SUFFIX|CpC
nts-PREVIOUS-SUFFIX|CpC
a-CURRENT-SUFFIX|CpC
tput-CURRENT-SUFFIX|CpC
ore-CURRENT-SUFFIX|CpC
a-PREVIOUS-PREFIX|CpC
er-PREVIOUS-SUFFIX|CpC
Outpu-CURRENT-PREFIX|CpC
teger-PREVIOUS-SUFFIX|CpC
Follow-up-PSEQW2|CpC
p-PREVIOUS-SUFFIX|CpC
the-CURRENT-PREFIX|CpC
right-CURRENT-SUFFIX|CpC
g-CURRENT-SUFFIX|CpC
123-</code>-PSEQW2|CpC
not-PREVIOUS-PREFIX|CpC
up-PREVIOUS-SUFFIX|CpC
solve-it-PSEQW2|CpC
Examp-PREVIOUS-PREFIX|CpC
=--121-PSEQW2|CpC
t-CURRENT-SUFFIX|CpC
=--101-PSEQW2|CpC
O-PREVIOUS-PREFIX|CpC
Exp-CURRENT-PREFIX|CpC
-121-CURRENT-SUFFIX|CpC
efore-PREVIOUS-SUFFIX|CpC
Exam-CURRENT-PREFIX|CpC
Coul-PREVIOUS-PREFIX|CpC
Rea-PREVIOUS-PREFIX|CpC
-121-Output-PSEQW2|CpC
same-PREVIOUS-PREFIX|CpC
rward-PREVIOUS-SUFFIX|CpC
123-PREVIOUS-SUFFIX|CpC
o-PREVIOUS-SUFFIX|CpC
31-PREVIOUS-SUFFIX|CpC
rue-CURRENT-SUFFIX|CpC
<code>--2-PSEQW2|CpC
low-PREVIOUS-SUFFIX|CpC
fore-CURRENT-SUFFIX|CpC
an-PREVIOUS-PREFIX|CpC
olve-CURRENT-SUFFIX|CpC
wit-PREVIOUS-PREFIX|CpC
tru-PREVIOUS-PREFIX|CpC
le-CURRENT-PREFIX|CpC
witho-PREVIOUS-PREFIX|CpC
f-CURRENT-SUFFIX|CpC
=-CURRENT-PREFIX|CpC
teger-CURRENT-SUFFIX|CpC
tput-PREVIOUS-SUFFIX|CpC
e>-CURRENT-SUFFIX|CpC
false-Explanation-PSEQW2|CpC
<code-CURRENT-PREFIX|CpC
a-PSEQW|CpC
becomes-PSEQpW|CpC
solve-CURRENT-SUFFIX|CpC
fr-PREVIOUS-PREFIX|CpC
n-PREVIOUS-SUFFIX|CpC
he-PREVIOUS-SUFFIX|CpC
false-</code>-PSEQW2|CpC
return-CURRENT-SUFFIX|CpC
Expla-PREVIOUS-PREFIX|CpC
Given-PREVIOUS-PREFIX|CpC
pa-CURRENT-PREFIX|CpC
Re-CURRENT-PREFIX|CpC
whi-PREVIOUS-PREFIX|CpC
n-CURRENT-SUFFIX|CpC
</code>-PSEQW|CpC
ight-CURRENT-SUFFIX|CpC
21-CURRENT-SUFFIX|CpC
pali-PREVIOUS-PREFIX|CpC
you-CURRENT-PREFIX|CpC
rome-CURRENT-SUFFIX|CpC
palindrome-PSEQW|CpC
w-PREVIOUS-SUFFIX|CpC
de>-CURRENT-SUFFIX|CpC
Co-PREVIOUS-PREFIX|CpC
right-,-PSEQW2|CpC
Fol-CURRENT-PREFIX|CpC
4-PSEQW|CpC
the-same-PSEQW2|CpC
ile-PREVIOUS-SUFFIX|CpC
Outpu-PREVIOUS-PREFIX|CpC
.-PREVIOUS-PREFIX|CpC
becom-CURRENT-PREFIX|CpC
an-CURRENT-SUFFIX|CpC
For-example-PSEQW2|CpC
ht-PREVIOUS-SUFFIX|CpC
palindrome-when-PSEQW2|CpC
hile-CURRENT-SUFFIX|CpC
forwa-CURRENT-PREFIX|CpC
Example-2-PSEQW2|CpC
fal-PREVIOUS-PREFIX|CpC
as-PSEQW|CpC
drome-CURRENT-SUFFIX|CpC
integ-PREVIOUS-PREFIX|CpC
e>-PREVIOUS-SUFFIX|CpC
ri-CURRENT-PREFIX|CpC
<code>-CURRENT-PREFIX|CpC
<code-PREVIOUS-PREFIX|CpC
refore-PREVIOUS-SUFFIX|CpC
Output-PREVIOUS-PREFIX|CpC
Example-3-PSEQW2|CpC
when-CURRENT-PREFIX|CpC
i-PREVIOUS-PREFIX|CpC
<c-PREVIOUS-PREFIX|CpC
Reads-PSEQW|CpC
refore-CURRENT-SUFFIX|CpC
to-a-PSEQW2|CpC
01-CURRENT-SUFFIX|CpC
reads-CURRENT-SUFFIX|CpC
palindrome-while-PSEQW2|CpC
</c-PREVIOUS-PREFIX|CpC
i-CURRENT-PREFIX|CpC
<code>-PREVIOUS-SUFFIX|CpC
10-CURRENT-SUFFIX|CpC
or-PREVIOUS-SUFFIX|CpC
<co-PREVIOUS-PREFIX|CpC
Give-PREVIOUS-PREFIX|CpC
</code>-Example-PSEQW2|CpC
integer-.-PSEQW2|CpC
xample-CURRENT-SUFFIX|CpC
,-<code>-PSEQW2|CpC
read-PREVIOUS-PREFIX|CpC
ode>-PREVIOUS-SUFFIX|CpC
wi-PREVIOUS-PREFIX|CpC
C-CURRENT-PREFIX|CpC
The-PREVIOUS-PREFIX|CpC
?-CURRENT-PREFIX|CpC
<-PREVIOUS-SUFFIX|CpC
23-CURRENT-SUFFIX|CpC
if-PSEQpW|CpC
ue-PREVIOUS-SUFFIX|CpC
integer-<code>-PSEQW2|CpC
turn-PREVIOUS-SUFFIX|CpC
x-PSEQpW|CpC
hout-CURRENT-SUFFIX|CpC
left-CURRENT-PREFIX|CpC
ecomes-CURRENT-SUFFIX|CpC
Constraints-PSEQW|CpC
I-PREVIOUS-PREFIX|CpC
-121-PREVIOUS-SUFFIX|CpC
123-CURRENT-SUFFIX|CpC
is-a-PSEQW2|CpC
string-PREVIOUS-SUFFIX|CpC
ger-PREVIOUS-SUFFIX|CpC
.-Example-PSEQW2|CpC
From-CURRENT-SUFFIX|CpC
comes-PREVIOUS-SUFFIX|CpC
Input-CURRENT-SUFFIX|CpC
not-CURRENT-SUFFIX|CpC
An-PSEQW|CpC
true-CURRENT-PREFIX|CpC
conv-PREVIOUS-PREFIX|CpC
ads-CURRENT-SUFFIX|CpC
4-PREVIOUS-PREFIX|CpC
solv-PREVIOUS-PREFIX|CpC
false-CURRENT-SUFFIX|CpC
ow-CURRENT-SUFFIX|CpC
</code>-Follow-PSEQW2|CpC
whil-CURRENT-PREFIX|CpC
Outp-CURRENT-PREFIX|CpC
I-CURRENT-PREFIX|CpC
Read-CURRENT-PREFIX|CpC
G-PREVIOUS-PREFIX|CpC
wh-CURRENT-PREFIX|CpC
E-CURRENT-PREFIX|CpC
w-CURRENT-PREFIX|CpC
an-PSEQpW|CpC
f-PREVIOUS-SUFFIX|CpC
forward-PSEQW|CpC
e-CURRENT-PREFIX|CpC
example-PSEQW|CpC
Follow-CURRENT-PREFIX|CpC
ts-PREVIOUS-SUFFIX|CpC
pali-CURRENT-PREFIX|CpC
</co-PREVIOUS-PREFIX|CpC
Exampl-CURRENT-PREFIX|CpC
c-CURRENT-PREFIX|CpC
ven-CURRENT-SUFFIX|CpC
false-PREVIOUS-PREFIX|CpC
ard-PREVIOUS-SUFFIX|CpC
<code>-121-PSEQW2|CpC
Therefore-it-PSEQW2|CpC
<-CURRENT-SUFFIX|CpC
Out-PREVIOUS-PREFIX|CpC
fore-PREVIOUS-SUFFIX|CpC
01-from-PSEQW2|CpC
rting-PREVIOUS-SUFFIX|CpC
</cod-CURRENT-PREFIX|CpC
4-:-PSEQW2|CpC
co-PREVIOUS-PREFIX|CpC
from-PREVIOUS-SUFFIX|CpC
palindrome-.-PSEQW2|CpC
eads-CURRENT-SUFFIX|CpC
the-PSEQW|CpC
alse-CURRENT-SUFFIX|CpC
witho-CURRENT-PREFIX|CpC
21--PREVIOUS-SUFFIX|CpC
Giv-PREVIOUS-PREFIX|CpC
Could-PSEQW|CpC
left-.-PSEQW2|CpC
rom-PREVIOUS-SUFFIX|CpC
R-PREVIOUS-PREFIX|CpC
?-CURRENT-SUFFIX|CpC
is-not-PSEQW2|CpC
31-CURRENT-SUFFIX|CpC
/code>-PREVIOUS-SUFFIX|CpC
Follow-PREVIOUS-PREFIX|CpC
conve-PREVIOUS-PREFIX|CpC
m-PREVIOUS-SUFFIX|CpC
For-PSEQW|CpC
Input-PSEQpW|CpC
backwa-PREVIOUS-PREFIX|CpC
while-PREVIOUS-PREFIX|CpC
Examp-CURRENT-PREFIX|CpC
tring-PREVIOUS-SUFFIX|CpC
llow-PREVIOUS-SUFFIX|CpC
on-PREVIOUS-SUFFIX|CpC
erting-CURRENT-SUFFIX|CpC
?-PSEQW|CpC
<code>-true-PSEQW2|CpC
bec-CURRENT-PREFIX|CpC
while-PREVIOUS-SUFFIX|CpC
from-right-PSEQW2|CpC
eft-CURRENT-SUFFIX|CpC
<cod-CURRENT-PREFIX|CpC
Explan-PREVIOUS-PREFIX|CpC
An-PREVIOUS-PREFIX|CpC
retu-CURRENT-PREFIX|CpC
code>-PREVIOUS-SUFFIX|CpC
,-CURRENT-SUFFIX|CpC
-PSEQpW|CpC
if-PSEQW|CpC
is-PREVIOUS-PREFIX|CpC
it-reads-PSEQW2|CpC
ht-CURRENT-SUFFIX|CpC
ght-PREVIOUS-SUFFIX|CpC
palindrome-PSEQpW|CpC
.-PSEQW|CpC
An-PSEQpW|CpC
Follow-PSEQW|CpC
false-PREVIOUS-SUFFIX|CpC
Th-PREVIOUS-PREFIX|CpC
,-it-PSEQW2|CpC
In-PREVIOUS-PREFIX|CpC
con-CURRENT-PREFIX|CpC
wh-PREVIOUS-PREFIX|CpC
pa-PREVIOUS-PREFIX|CpC
3-PREVIOUS-SUFFIX|CpC
Output-:-PSEQW2|CpC
en-CURRENT-SUFFIX|CpC
false-CURRENT-PREFIX|CpC
beco-CURRENT-PREFIX|CpC
es-PREVIOUS-SUFFIX|CpC
ret-CURRENT-PREFIX|CpC
ve-PREVIOUS-SUFFIX|CpC
hout-PREVIOUS-SUFFIX|CpC
Cou-PREVIOUS-PREFIX|CpC
alse-PREVIOUS-SUFFIX|CpC
</c-CURRENT-PREFIX|CpC
return-PSEQW|CpC
utput-PREVIOUS-SUFFIX|CpC
in-CURRENT-PREFIX|CpC
ame-CURRENT-SUFFIX|CpC
<code>-123-PSEQW2|CpC
from-PREVIOUS-PREFIX|CpC
not-PSEQW|CpC
o-CURRENT-SUFFIX|CpC
Fr-CURRENT-PREFIX|CpC
<co-CURRENT-PREFIX|CpC
ample-CURRENT-SUFFIX|CpC
no-CURRENT-PREFIX|CpC
it-becomes-PSEQW2|CpC
stri-PREVIOUS-PREFIX|CpC
exam-CURRENT-PREFIX|CpC
int-CURRENT-PREFIX|CpC
10-PSEQpW|CpC
PSEQ|CpC
pal-PREVIOUS-PREFIX|CpC
if-<code>-PSEQW2|CpC
ore-PREVIOUS-SUFFIX|CpC
121-CURRENT-PREFIX|CpC
10-CURRENT-PREFIX|CpC
tr-PREVIOUS-PREFIX|CpC
Co-CURRENT-PREFIX|CpC
-101-Output-PSEQW2|CpC
1-:-PSEQW2|CpC
x-CURRENT-SUFFIX|CpC
4-PREVIOUS-SUFFIX|CpC
Ex-CURRENT-PREFIX|CpC
There-PREVIOUS-PREFIX|CpC
Const-CURRENT-PREFIX|CpC
er-CURRENT-SUFFIX|CpC
ring-CURRENT-SUFFIX|CpC
rig-CURRENT-PREFIX|CpC
31-CURRENT-PREFIX|CpC
when-it-PSEQW2|CpC
forward-PSEQpW|CpC
om-PREVIOUS-SUFFIX|CpC
mes-PREVIOUS-SUFFIX|CpC
-2-PREVIOUS-SUFFIX|CpC
F-PREVIOUS-PREFIX|CpC
while-<code>-PSEQW2|CpC
exampl-CURRENT-PREFIX|CpC
Ther-CURRENT-PREFIX|CpC
</-CURRENT-PREFIX|CpC
The-CURRENT-PREFIX|CpC
not-a-PSEQW2|CpC
,-PREVIOUS-SUFFIX|CpC
rd-PREVIOUS-SUFFIX|CpC
when-CURRENT-SUFFIX|CpC
up-PSEQW|CpC
Could-CURRENT-PREFIX|CpC
ba-PREVIOUS-PREFIX|CpC
123-PSEQW|CpC
to-right-PSEQW2|CpC
p-PREVIOUS-PREFIX|CpC
:-From-PSEQW2|CpC
31-PSEQW|CpC
it-PREVIOUS-PREFIX|CpC
.-From-PSEQW2|CpC
con-PREVIOUS-PREFIX|CpC
Input-:-PSEQW2|CpC
it-PREVIOUS-SUFFIX|CpC
0-PREVIOUS-SUFFIX|CpC
Explanation-PSEQpW|CpC
Therefore-PSEQpW|CpC
conv-CURRENT-PREFIX|CpC
Follo-CURRENT-PREFIX|CpC
121-Output-PSEQW2|CpC
t-PREVIOUS-PREFIX|CpC
reads-CURRENT-PREFIX|CpC
3-CURRENT-SUFFIX|CpC
put-PREVIOUS-SUFFIX|CpC
hile-PREVIOUS-SUFFIX|CpC
x-<-PSEQW2|CpC
mple-CURRENT-SUFFIX|CpC
a-palindrome-PSEQW2|CpC
you-PSEQW|CpC
you-CURRENT-SUFFIX|CpC
Th-CURRENT-PREFIX|CpC
backward-PSEQpW|CpC
omes-CURRENT-SUFFIX|CpC
becomes-PSEQW|CpC
ward-CURRENT-SUFFIX|CpC
ight-PREVIOUS-SUFFIX|CpC
int-PREVIOUS-PREFIX|CpC
string-PSEQpW|CpC
rward-CURRENT-SUFFIX|CpC
uld-CURRENT-SUFFIX|CpC
<code>-PSEQW|CpC
a-PREVIOUS-SUFFIX|CpC
up-PSEQpW|CpC
Follow-PREVIOUS-SUFFIX|CpC
eft-PREVIOUS-SUFFIX|CpC
null-TNS1|CpC
ode>-CURRENT-SUFFIX|CpC
erting-PREVIOUS-SUFFIX|CpC
Exa-PREVIOUS-PREFIX|CpC
ile-CURRENT-SUFFIX|CpC
read-CURRENT-PREFIX|CpC
l-PREVIOUS-PREFIX|CpC
,-CURRENT-PREFIX|CpC
fro-PREVIOUS-PREFIX|CpC
<c-CURRENT-PREFIX|CpC
an-integer-PSEQW2|CpC
fo-CURRENT-PREFIX|CpC
nation-PREVIOUS-SUFFIX|CpC
,-PSEQW|CpC
0-CURRENT-PREFIX|CpC
ds-PREVIOUS-SUFFIX|CpC
=-2-PSEQW2|CpC
yo-CURRENT-PREFIX|CpC
:-x-PSEQW2|CpC
:-Could-PSEQW2|CpC
-121-.-PSEQW2|CpC
palind-CURRENT-PREFIX|CpC
Out-CURRENT-PREFIX|CpC
lse-PREVIOUS-SUFFIX|CpC
left-PREVIOUS-PREFIX|CpC
string-CURRENT-SUFFIX|CpC
Ther-PREVIOUS-PREFIX|CpC
turn-CURRENT-SUFFIX|CpC
forw-CURRENT-PREFIX|CpC
--PSEQW|CpC
ting-CURRENT-SUFFIX|CpC
Given-PREVIOUS-SUFFIX|CpC
urn-CURRENT-SUFFIX|CpC
l-CURRENT-PREFIX|CpC
ple-CURRENT-SUFFIX|CpC
tr-CURRENT-PREFIX|CpC
3-PREVIOUS-PREFIX|CpC
Theref-PREVIOUS-PREFIX|CpC
from-CURRENT-SUFFIX|CpC
e-PREVIOUS-SUFFIX|CpC
conver-CURRENT-PREFIX|CpC
4-CURRENT-PREFIX|CpC
<-CURRENT-PREFIX|CpC
becomes-121--PSEQW2|CpC
an-CURRENT-PREFIX|CpC
121--PSEQpW|CpC
Ex-PREVIOUS-PREFIX|CpC
Fol-PREVIOUS-PREFIX|CpC
wi-CURRENT-PREFIX|CpC
Inpu-PREVIOUS-PREFIX|CpC
x-CURRENT-PREFIX|CpC
rting-CURRENT-SUFFIX|CpC
x-</code>-PSEQW2|CpC
t-CURRENT-PREFIX|CpC
nput-CURRENT-SUFFIX|CpC
ng-CURRENT-SUFFIX|CpC
p-CURRENT-PREFIX|CpC
thout-CURRENT-SUFFIX|CpC
the-PREVIOUS-PREFIX|CpC
example-PSEQpW|CpC
ing-CURRENT-SUFFIX|CpC
23-PREVIOUS-SUFFIX|CpC
omes-PREVIOUS-SUFFIX|CpC
iven-CURRENT-SUFFIX|CpC
Rea-CURRENT-PREFIX|CpC
without-converting-PSEQW2|CpC
-Given-PSEQW2|CpC
T-CURRENT-PREFIX|CpC
integer-is-PSEQW2|CpC
right-CURRENT-PREFIX|CpC
f-PREVIOUS-PREFIX|CpC
-121-CURRENT-PREFIX|CpC
ome-CURRENT-SUFFIX|CpC
For-PREVIOUS-PREFIX|CpC
ot-CURRENT-SUFFIX|CpC
A-CURRENT-PREFIX|CpC
1-PREVIOUS-PREFIX|CpC
not-PREVIOUS-SUFFIX|CpC
return-PREVIOUS-SUFFIX|CpC
inte-PREVIOUS-PREFIX|CpC
Given-PSEQW|CpC
st-CURRENT-PREFIX|CpC
31-PSEQpW|CpC
same-PREVIOUS-SUFFIX|CpC
10-PREVIOUS-PREFIX|CpC
01-PSEQpW|CpC
Constr-CURRENT-PREFIX|CpC
an-PSEQW|CpC
.-CURRENT-PREFIX|CpC
back-PREVIOUS-PREFIX|CpC
true-PREVIOUS-PREFIX|CpC
become-PREVIOUS-PREFIX|CpC
121--CURRENT-SUFFIX|CpC
</co-CURRENT-PREFIX|CpC
is-CURRENT-PREFIX|CpC
code>-CURRENT-SUFFIX|CpC
th-CURRENT-PREFIX|CpC
ut-PREVIOUS-SUFFIX|CpC
the-PREVIOUS-SUFFIX|CpC
right-PREVIOUS-PREFIX|CpC
rome-PREVIOUS-SUFFIX|CpC
--PREVIOUS-SUFFIX|CpC
:-PREVIOUS-PREFIX|CpC
le-CURRENT-SUFFIX|CpC
ou-PREVIOUS-SUFFIX|CpC
C-PREVIOUS-PREFIX|CpC
urn-PREVIOUS-SUFFIX|CpC
-121-PREVIOUS-PREFIX|CpC
Example-1-PSEQW2|CpC
ue-CURRENT-SUFFIX|CpC
Foll-PREVIOUS-PREFIX|CpC
sam-PREVIOUS-PREFIX|CpC
sa-CURRENT-PREFIX|CpC
T-PREVIOUS-PREFIX|CpC
Given-PSEQpW|CpC
1-CURRENT-SUFFIX|CpC
sam-CURRENT-PREFIX|CpC
nteger-PREVIOUS-SUFFIX|CpC
thout-PREVIOUS-SUFFIX|CpC
01-PREVIOUS-SUFFIX|CpC
ckward-CURRENT-SUFFIX|CpC
when-PREVIOUS-PREFIX|CpC
to-PSEQpW|CpC
t-PREVIOUS-SUFFIX|CpC
reads-the-PSEQW2|CpC
backw-CURRENT-PREFIX|CpC
yo-PREVIOUS-PREFIX|CpC
beco-PREVIOUS-PREFIX|CpC
string-?-PSEQW2|CpC
.-PSEQpW|CpC
ret-PREVIOUS-PREFIX|CpC
string-PSEQW|CpC
Could-PREVIOUS-PREFIX|CpC
become-CURRENT-PREFIX|CpC
For-PSEQpW|CpC
if-CURRENT-PREFIX|CpC
s-PREVIOUS-SUFFIX|CpC
when-PSEQW|CpC
from-PSEQW|CpC
right-to-PSEQW2|CpC
d-CURRENT-SUFFIX|CpC
eads-PREVIOUS-SUFFIX|CpC
1-PSEQpW|CpC
lef-PREVIOUS-PREFIX|CpC
from-CURRENT-PREFIX|CpC
>-CURRENT-SUFFIX|CpC
-101-PREVIOUS-PREFIX|CpC
whe-CURRENT-PREFIX|CpC
w-CURRENT-SUFFIX|CpC
it-PSEQW|CpC
ger-CURRENT-SUFFIX|CpC
-12-PREVIOUS-PREFIX|CpC
ints-PREVIOUS-SUFFIX|CpC
From-PSEQW|CpC
01-CURRENT-PREFIX|CpC
p-CURRENT-SUFFIX|CpC
:-PSEQW|CpC
ollow-CURRENT-SUFFIX|CpC
Follow-CURRENT-SUFFIX|CpC
as-forward-PSEQW2|CpC
-2-CURRENT-SUFFIX|CpC
-1-PREVIOUS-PREFIX|CpC
<code>-PSEQpW|CpC
sol-PREVIOUS-PREFIX|CpC
Output-CURRENT-PREFIX|CpC
Explanation-PSEQW|CpC
put-CURRENT-SUFFIX|CpC
retur-CURRENT-PREFIX|CpC
-TPS2|CpC
ds-CURRENT-SUFFIX|CpC
123-CURRENT-PREFIX|CpC
left-CURRENT-SUFFIX|CpC
12-CURRENT-PREFIX|CpC
:-true-PSEQW2|CpC
return-<code>-PSEQW2|CpC
ght-CURRENT-SUFFIX|CpC
ft-CURRENT-SUFFIX|CpC
be-PREVIOUS-PREFIX|CpC
Re-PREVIOUS-PREFIX|CpC
Follow-PSEQpW|CpC
Exam-PREVIOUS-PREFIX|CpC
=-10-PSEQW2|CpC
hen-PREVIOUS-SUFFIX|CpC
not-CURRENT-PREFIX|CpC
es-CURRENT-SUFFIX|CpC
w-PREVIOUS-PREFIX|CpC
eger-CURRENT-SUFFIX|CpC
Exa-CURRENT-PREFIX|CpC
Explan-CURRENT-PREFIX|CpC
x-PREVIOUS-PREFIX|CpC
left-PREVIOUS-SUFFIX|CpC
Could-CURRENT-SUFFIX|CpC
true-PSEQW|CpC
2-31-PSEQW2|CpC
same-backward-PSEQW2|CpC
aints-PREVIOUS-SUFFIX|CpC
string-PREVIOUS-PREFIX|CpC
31-PREVIOUS-PREFIX|CpC
<-PSEQpW|CpC
-2-PSEQW|CpC
solve-PSEQpW|CpC
olve-PREVIOUS-SUFFIX|CpC
a-PSEQpW|CpC
tring-CURRENT-SUFFIX|CpC
Fo-PREVIOUS-PREFIX|CpC
me-CURRENT-SUFFIX|CpC
string-CURRENT-PREFIX|CpC
0-CURRENT-SUFFIX|CpC
Could-you-PSEQW2|CpC
e-PREVIOUS-PREFIX|CpC
1--PREVIOUS-SUFFIX|CpC
false-PSEQW|CpC
Output-PREVIOUS-SUFFIX|CpC
ting-PREVIOUS-SUFFIX|CpC
bec-PREVIOUS-PREFIX|CpC
right-PSEQpW|CpC
Give-CURRENT-PREFIX|CpC
121-</code>-PSEQW2|CpC
en-PREVIOUS-SUFFIX|CpC
to-CURRENT-PREFIX|CpC
rue-PREVIOUS-SUFFIX|CpC
not-PSEQpW|CpC
.-An-PSEQW2|CpC
tru-CURRENT-PREFIX|CpC
mes-CURRENT-SUFFIX|CpC
<code>-Input-PSEQW2|CpC
eturn-PREVIOUS-SUFFIX|CpC
</code-PREVIOUS-PREFIX|CpC
0-PREVIOUS-PREFIX|CpC
bac-PREVIOUS-PREFIX|CpC
Could-PSEQpW|CpC
backw-PREVIOUS-PREFIX|CpC
to-PREVIOUS-SUFFIX|CpC
There-CURRENT-PREFIX|CpC
31---PSEQW2|CpC
the-integer-PSEQW2|CpC
without-PSEQW|CpC
Const-PREVIOUS-PREFIX|CpC
-2-PREVIOUS-PREFIX|CpC
rd-CURRENT-SUFFIX|CpC
ot-PREVIOUS-SUFFIX|CpC
Explanation-:-PSEQW2|CpC
low-CURRENT-SUFFIX|CpC
In-CURRENT-PREFIX|CpC
fr-CURRENT-PREFIX|CpC
121-PSEQW|CpC
same-CURRENT-PREFIX|CpC
as-PREVIOUS-PREFIX|CpC
not-.-PSEQW2|CpC
righ-CURRENT-PREFIX|CpC
forw-PREVIOUS-PREFIX|CpC
Output-PSEQW|CpC
u-PREVIOUS-SUFFIX|CpC
drome-PREVIOUS-SUFFIX|CpC
Given-CURRENT-PREFIX|CpC
fals-PREVIOUS-PREFIX|CpC
so-PREVIOUS-PREFIX|CpC
becom-PREVIOUS-PREFIX|CpC
2-PSEQW|CpC
se-CURRENT-SUFFIX|CpC
raints-PREVIOUS-SUFFIX|CpC
whe-PREVIOUS-PREFIX|CpC
with-CURRENT-PREFIX|CpC
nation-CURRENT-SUFFIX|CpC
Reads-PSEQpW|CpC
Con-CURRENT-PREFIX|CpC
123-PSEQpW|CpC
nts-CURRENT-SUFFIX|CpC
ng-PREVIOUS-SUFFIX|CpC
2-:-PSEQW2|CpC
while-PSEQW|CpC
you-PREVIOUS-SUFFIX|CpC
exa-PREVIOUS-PREFIX|CpC
Fro-PREVIOUS-PREFIX|CpC
Theref-CURRENT-PREFIX|CpC
3-CURRENT-PREFIX|CpC
ould-CURRENT-SUFFIX|CpC
123-PREVIOUS-PREFIX|CpC
Reads-01-PSEQW2|CpC
x-=-PSEQW2|CpC
From-left-PSEQW2|CpC
1-</code>-PSEQW2|CpC
3-PSEQW|CpC
4-PSEQpW|CpC
Inp-PREVIOUS-PREFIX|CpC
de>-PREVIOUS-SUFFIX|CpC
-12-CURRENT-PREFIX|CpC
fro-CURRENT-PREFIX|CpC
an-PREVIOUS-SUFFIX|CpC
ld-CURRENT-SUFFIX|CpC
when-PSEQpW|CpC
Read-PREVIOUS-PREFIX|CpC
Therefore-PSEQW|CpC
up-CURRENT-PREFIX|CpC
om-CURRENT-SUFFIX|CpC
Con-PREVIOUS-PREFIX|CpC
O-CURRENT-PREFIX|CpC
.-For-PSEQW2|CpC
ads-PREVIOUS-SUFFIX|CpC
as-CURRENT-PREFIX|CpC
-101-CURRENT-PREFIX|CpC
integer-to-PSEQW2|CpC
ou-CURRENT-SUFFIX|CpC
Giv-CURRENT-PREFIX|CpC
--CURRENT-PREFIX|CpC
co-CURRENT-PREFIX|CpC
bac-CURRENT-PREFIX|CpC
3-:-PSEQW2|CpC
reads-PREVIOUS-PREFIX|CpC
Example-PSEQpW|CpC
palind-PREVIOUS-PREFIX|CpC
true-</code>-PSEQW2|CpC
u-CURRENT-PREFIX|CpC
G-CURRENT-PREFIX|CpC
up-PREVIOUS-PREFIX|CpC
From-PREVIOUS-SUFFIX|CpC
for-CURRENT-PREFIX|CpC
lse-CURRENT-SUFFIX|CpC
121-PREVIOUS-PREFIX|CpC
</cod-PREVIOUS-PREFIX|CpC
2-PREVIOUS-PREFIX|CpC
y-CURRENT-PREFIX|CpC
s-CURRENT-PREFIX|CpC
>-PREVIOUS-SUFFIX|CpC
12-PREVIOUS-PREFIX|CpC
Reads-CURRENT-SUFFIX|CpC
llow-CURRENT-SUFFIX|CpC
hen-CURRENT-SUFFIX|CpC
nteger-CURRENT-SUFFIX|CpC
forwar-CURRENT-PREFIX|CpC
a-CURRENT-PREFIX|CpC
while-CURRENT-PREFIX|CpC
-101-PSEQpW|CpC
121-CURRENT-SUFFIX|CpC
-121-PSEQpW|CpC
=-PSEQW|CpC
121--PSEQW|CpC
Ou-CURRENT-PREFIX|CpC
-2-31-PSEQW2|CpC
ow-PREVIOUS-SUFFIX|CpC
if-PREVIOUS-SUFFIX|CpC
intege-PREVIOUS-PREFIX|CpC
u-CURRENT-SUFFIX|CpC
ints-CURRENT-SUFFIX|CpC
strin-CURRENT-PREFIX|CpC
ri-PREVIOUS-PREFIX|CpC
ven-PREVIOUS-SUFFIX|CpC
E-PREVIOUS-PREFIX|CpC
eturn-CURRENT-SUFFIX|CpC
An-CURRENT-PREFIX|CpC
backward-PSEQW|CpC
-101-CURRENT-SUFFIX|CpC
Gi-CURRENT-PREFIX|CpC
-2-PSEQpW|CpC
ion-CURRENT-SUFFIX|CpC
r-CURRENT-SUFFIX|CpC
ex-CURRENT-PREFIX|CpC
--PSEQpW|CpC
d-PREVIOUS-SUFFIX|CpC
withou-CURRENT-PREFIX|CpC
left-PSEQpW|CpC
so-CURRENT-PREFIX|CpC
palindrome-integer-PSEQW2|CpC
fo-PREVIOUS-PREFIX|CpC
comes-CURRENT-SUFFIX|CpC
21--CURRENT-SUFFIX|CpC
re-PREVIOUS-SUFFIX|CpC
same-PSEQW|CpC
le-PREVIOUS-PREFIX|CpC
rn-CURRENT-SUFFIX|CpC
-10-CURRENT-PREFIX|CpC
ts-CURRENT-SUFFIX|CpC
Gi-PREVIOUS-PREFIX|CpC
ex-PREVIOUS-PREFIX|CpC
ithout-PREVIOUS-SUFFIX|CpC
:-<code>-PSEQW2|CpC
up-:-PSEQW2|CpC
str-PREVIOUS-PREFIX|CpC
For-CURRENT-PREFIX|CpC
An-CURRENT-SUFFIX|CpC
</code>-if-PSEQW2|CpC
exa-CURRENT-PREFIX|CpC
is-PREVIOUS-SUFFIX|CpC
2-PSEQpW|CpC
121--PREVIOUS-SUFFIX|CpC
re-CURRENT-PREFIX|CpC
forward-.-PSEQW2|CpC
solv-CURRENT-PREFIX|CpC
kward-PREVIOUS-SUFFIX|CpC
Constraints-PSEQpW|CpC
intege-CURRENT-PREFIX|CpC
se-PREVIOUS-SUFFIX|CpC
rea-CURRENT-PREFIX|CpC
101-PREVIOUS-SUFFIX|CpC
you-solve-PSEQW2|CpC
A-PREVIOUS-PREFIX|CpC
efore-CURRENT-SUFFIX|CpC
re-PREVIOUS-PREFIX|CpC
Reads-PREVIOUS-SUFFIX|CpC
Fr-PREVIOUS-PREFIX|CpC
converting-the-PSEQW2|CpC
is-PSEQpW|CpC
Expl-CURRENT-PREFIX|CpC
Input-CURRENT-PREFIX|CpC
/code>-CURRENT-SUFFIX|CpC
left-,-PSEQW2|CpC
true-CURRENT-SUFFIX|CpC
me-PREVIOUS-SUFFIX|CpC
is-PSEQW|CpC
Exampl-PREVIOUS-PREFIX|CpC
2-CURRENT-SUFFIX|CpC
121--PREVIOUS-PREFIX|CpC
le-PREVIOUS-SUFFIX|CpC
fa-PREVIOUS-PREFIX|CpC
false-PSEQpW|CpC
as-PSEQpW|CpC
31-<-PSEQW2|CpC
Fo-CURRENT-PREFIX|CpC
ut-CURRENT-SUFFIX|CpC
if-PREVIOUS-PREFIX|CpC
An-PREVIOUS-SUFFIX|CpC
Input-PSEQW|CpC
utput-CURRENT-SUFFIX|CpC
str-CURRENT-PREFIX|CpC
</code-CURRENT-PREFIX|CpC
uld-PREVIOUS-SUFFIX|CpC
ation-PREVIOUS-SUFFIX|CpC
sol-CURRENT-PREFIX|CpC
<code>-x-PSEQW2|CpC
r-PREVIOUS-SUFFIX|CpC
Expla-CURRENT-PREFIX|CpC
up-CURRENT-SUFFIX|CpC
From-PREVIOUS-PREFIX|CpC
wit-CURRENT-PREFIX|CpC
rea-PREVIOUS-PREFIX|CpC
same-CURRENT-SUFFIX|CpC
while-CURRENT-SUFFIX|CpC
121-PREVIOUS-SUFFIX|CpC
u-PREVIOUS-PREFIX|CpC
e-CURRENT-SUFFIX|CpC
palin-CURRENT-PREFIX|CpC
forwa-PREVIOUS-PREFIX|CpC
while-PSEQpW|CpC
ation-CURRENT-SUFFIX|CpC
c-PREVIOUS-PREFIX|CpC
ndrome-PREVIOUS-SUFFIX|CpC
rn-PREVIOUS-SUFFIX|CpC
<code>-PREVIOUS-PREFIX|CpC
From-right-PSEQW2|CpC
without-PSEQpW|CpC
palin-PREVIOUS-PREFIX|CpC
back-CURRENT-PREFIX|CpC
you-PREVIOUS-PREFIX|CpC
Input-PREVIOUS-SUFFIX|CpC
y-PREVIOUS-PREFIX|CpC
Inpu-CURRENT-PREFIX|CpC
backward-as-PSEQW2|CpC
reads-PSEQW|CpC
Ou-PREVIOUS-PREFIX|CpC
ame-PREVIOUS-SUFFIX|CpC
-10-PREVIOUS-PREFIX|CpC
=-PREVIOUS-PREFIX|CpC
<-PREVIOUS-PREFIX|CpC
solve-CURRENT-PREFIX|CpC
for-PREVIOUS-PREFIX|CpC
right-PSEQW|CpC
ward-PREVIOUS-SUFFIX|CpC
examp-PREVIOUS-PREFIX|CpC
From-CURRENT-PREFIX|CpC
solve-PREVIOUS-PREFIX|CpC
no-PREVIOUS-PREFIX|CpC
whil-PREVIOUS-PREFIX|CpC
Output-CURRENT-SUFFIX|CpC
Example-PSEQW|CpC
.-PREVIOUS-SUFFIX|CpC
<code>-CURRENT-SUFFIX|CpC
orward-PREVIOUS-SUFFIX|CpC
-1-CURRENT-PREFIX|CpC
example-,-PSEQW2|CpC
Reads-CURRENT-PREFIX|CpC
true-PSEQpW|CpC
2-CURRENT-PREFIX|CpC
reads-PSEQpW|CpC
lve-PREVIOUS-SUFFIX|CpC
it-CURRENT-PREFIX|CpC
ndrome-CURRENT-SUFFIX|CpC
Given-CURRENT-SUFFIX|CpC
sa-PREVIOUS-PREFIX|CpC
ion-PREVIOUS-SUFFIX|CpC
iven-PREVIOUS-SUFFIX|CpC
ome-PREVIOUS-SUFFIX|CpC
ve-CURRENT-SUFFIX|CpC
as-PREVIOUS-SUFFIX|CpC
Foll-CURRENT-PREFIX|CpC
converting-PSEQpW|CpC
converting-PSEQW|CpC
Example-4-PSEQW2|CpC
backwa-CURRENT-PREFIX|CpC
a-string-PSEQW2|CpC
same-PSEQpW|CpC
:-Reads-PSEQW2|CpC
raints-CURRENT-SUFFIX|CpC
=-CURRENT-SUFFIX|CpC
--1-PSEQW2|CpC
to-CURRENT-SUFFIX|CpC
1--CURRENT-SUFFIX|CpC
=-PSEQpW|CpC
retu-PREVIOUS-PREFIX|CpC
is-palindrome-PSEQW2|CpC
reads--121-PSEQW2|CpC
--CURRENT-SUFFIX|CpC
Outp-PREVIOUS-PREFIX|CpC
Constr-PREVIOUS-PREFIX|CpC
kward-CURRENT-SUFFIX|CpC
eger-PREVIOUS-SUFFIX|CpC
<-=-PSEQW2|CpC
r-PREVIOUS-PREFIX|CpC
</code>-PSEQpW|CpC
it-CURRENT-SUFFIX|CpC
fals-CURRENT-PREFIX|CpC
lef-CURRENT-PREFIX|CpC
with-PREVIOUS-PREFIX|CpC
R-CURRENT-PREFIX|CpC
on-CURRENT-SUFFIX|CpC
return-PSEQpW|CpC
conver-PREVIOUS-PREFIX|CpC
ft-PREVIOUS-SUFFIX|CpC
.-</code>-PSEQW2|CpC
=-PREVIOUS-SUFFIX|CpC
ollow-PREVIOUS-SUFFIX|CpC
or-CURRENT-SUFFIX|CpC
re-CURRENT-SUFFIX|CpC
g-PREVIOUS-SUFFIX|CpC
the-PSEQpW|CpC
:-PSEQpW|CpC
For-CURRENT-SUFFIX|CpC
examp-CURRENT-PREFIX|CpC
Expl-PREVIOUS-PREFIX|CpC
21-PREVIOUS-SUFFIX|CpC
Reads-PREVIOUS-PREFIX|CpC
solve-PREVIOUS-SUFFIX|CpC
integ-CURRENT-PREFIX|CpC
th-PREVIOUS-PREFIX|CpC
Cons-PREVIOUS-PREFIX|CpC
n-PREVIOUS-PREFIX|CpC
-101-PSEQW|CpC
Could-PREVIOUS-SUFFIX|CpC
pal-CURRENT-PREFIX|CpC
-101-PREVIOUS-SUFFIX|CpC
Coul-CURRENT-PREFIX|CpC
orward-CURRENT-SUFFIX|CpC
it-without-PSEQW2|CpC
from-PSEQpW|CpC
integer-PSEQpW|CpC
nput-PREVIOUS-SUFFIX|CpC
ing-PREVIOUS-SUFFIX|CpC
exampl-PREVIOUS-PREFIX|CpC
return-CURRENT-PREFIX|CpC
:-CURRENT-PREFIX|CpC
Input-PREVIOUS-PREFIX|CpC
tion-CURRENT-SUFFIX|CpC
be-CURRENT-PREFIX|CpC
in-PREVIOUS-PREFIX|CpC
F-CURRENT-PREFIX|CpC
ring-PREVIOUS-SUFFIX|CpC
out-PREVIOUS-SUFFIX|CpC
r-CURRENT-PREFIX|CpC
ould-PREVIOUS-SUFFIX|CpC
Cou-CURRENT-PREFIX|CpC
ba-CURRENT-PREFIX|CpC
to-PSEQW|CpC
n-CURRENT-PREFIX|CpC
</code>-Constraints-PSEQW2|CpC
strin-PREVIOUS-PREFIX|CpC
ecomes-PREVIOUS-SUFFIX|CpC
the-CURRENT-SUFFIX|CpC
f-CURRENT-PREFIX|CpC
b-CURRENT-PREFIX|CpC
</code>-,-PSEQW2|CpC
